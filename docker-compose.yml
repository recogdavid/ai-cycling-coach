services:
  postgres:
    image: pgvector/pgvector:pg15
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./scripts/create_user_db.sql:/docker-entrypoint-initdb.d/create_user_db.sql
      - ./scripts/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    expose:
      - "5432"
    networks:
      - ai-coach-net
  n8n:
    image: n8nio/n8n:latest
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: aicoach_db
      DB_POSTGRESDB_USER: aicoach_user
      DB_POSTGRESDB_PASSWORD: D4bosch!609
      N8N_LISTEN_ADDRESS: 0.0.0.0
      N8N_BASIC_AUTH_ACTIVE: 'true'
      N8N_BASIC_AUTH_USER: n8n_admin
      N8N_BASIC_AUTH_PASSWORD: D4bosch!609
      N8N_ENCRYPTION_KEY: wS98OAwFKHuYVnE8qzU0HRT8ndrR15Xaroot
      N8N_HOST: dabosch.fit
      N8N_PORT: 5678
      N8N_PROTOCOL: https
      GENERIC_TIMEZONE: Europe/London
      WEBHOOK_URL: https://dabosch.fit/
      N8N_EDITOR_BASE_URL: https://n8n.dabosch.fit/
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./data/n8n:/home/node/.n8n
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - ai-coach-net
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./web/html:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:rw
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:rw
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - n8n
    networks:
      - ai-coach-net
  certbot:
    image: certbot/certbot:latest
    container_name: ai-cycling-coach-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: >
      sh -c "trap exit TERM;
      while :; do
        certbot renew --webroot -w /var/www/certbot;
        sleep 12h;
      done"
networks:
  ai-coach-net:
    driver: bridge
