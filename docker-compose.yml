services:
  # 1. PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine # Production-ready, as per spec [cite: 40]
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      # Persistent storage for database data
      - ${DATA_DIR}/postgres:/var/lib/postgresql/data
      # Initialisation script (runs on first launch)
      - ./scripts/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
    # Internal network only access
    expose:
      - ${POSTGRES_PORT}

  # 2. n8n Workflow Engine Service
  n8n:
    image: n8nio/n8n:latest # Orchestration layer [cite: 39]
    restart: always
    environment:
      # n8n Host/Protocol for correct webhook generation
      N8N_HOST: ${N8N_HOST}
      N8N_PROTOCOL: ${N8N_PROTOCOL}
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      N8N_RUNNERS_ENABLED: 'true'
      N8N_BLOCK_ENV_ACCESS_IN_NODE: 'false'  
      N8N_USER_FOLDER: /home/node/.n8n      
      DB_TYPE: postgresdb
      DB_HOST: postgres
      DB_DATABASE: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_SQLITE_POOL_SIZE: 1  
      # Environment to store sensitive API credentials
      GENERIC_TIMEZONE: Europe/London # Adjust timezone as needed
      INDOOR_PLATFORMS_SUPPORTED: zwift,trainerroad,rouvy  
    volumes:
      # Persistent storage for n8n's internal data and credential store [cite: 249]
      - ${DATA_DIR}/n8n:/home/node/.n8n
      # Mount local workflows directory
      - ./workflows:/home/node/.n8n/workflows 
    depends_on:
      - postgres
    # Internal port for proxying
    expose:
      - ${N8N_PORT}

  # 3. Nginx Reverse Proxy Service
  nginx:
    image: nginx:alpine # Web Server and Reverse Proxy [cite: 43]
    restart: always
    ports:
      # Expose standard HTTPS and HTTP ports
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf 
      - ./ssl:/etc/nginx/ssl
      - ./certbot/www:/var/www/certbot
      # - ${DATA_DIR}/nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - n8n
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    command: certonly --webroot -w /var/www/certbot -d dabosch.fit --email david@recognition-circular.org --rsa-key-size 4096 --agree-tos --non-interactive
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./ssl:/etc/letsencrypt/live/dabosch.fit 
    depends_on:
      - nginx
